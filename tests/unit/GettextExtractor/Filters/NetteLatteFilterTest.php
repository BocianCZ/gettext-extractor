<?php
/**
 * GettextExtractor
 *
 * This source file is subject to the New BSD License.
 *
 * @copyright Copyright (c) 2010 Ondřej Vodáček
 * @license New BSD License
 */

require_once dirname(__FILE__).'/FilterTest.php';

/**
 * Test class for GettextExtractor_Filters_NetteLatteFilter.
 * Generated by PHPUnit on 2010-12-15 at 21:59:47.
 */
class GettextExtractor_Filters_NetteLatteFilterTest extends GettextExtractor_Filters_FilterTest {

	protected function setUp() {
		$this->object = new GettextExtractor_Filters_NetteLatteFilter();
		$this->file = dirname(__FILE__) . '/../../data/default.latte';
	}

	public function testFunctionCallWithVariables() {
		$messages = $this->object->extract($this->file);

		$this->assertNotContains(array(
			GettextExtractor_Extractor::LINE => 7,
			GettextExtractor_Extractor::SINGULAR => '$foo'
		), $messages);

		$this->assertNotContains(array(
			GettextExtractor_Extractor::LINE => 8,
			GettextExtractor_Extractor::SINGULAR => '$bar',
			GettextExtractor_Extractor::CONTEXT => 'context'
		), $messages);

		$this->assertNotContains(array(
			GettextExtractor_Extractor::LINE => 9,
			GettextExtractor_Extractor::SINGULAR => 'I see %d little indian!',
			GettextExtractor_Extractor::PLURAL => 'I see %d little indians!',
			GettextExtractor_Extractor::CONTEXT => '$baz'
		), $messages);
	}

	public function testConstantsArrayMethodsAndFunctions() {
		$messages = $this->object->extract(dirname(__FILE__) . '/../../data/test.latte');
		$this->assertCount(1, $messages);
		$expected = array(
			GettextExtractor_Extractor::LINE => 1,
			GettextExtractor_Extractor::SINGULAR => 'Testovaci retezec'
		);
		ksort($messages[0]);
		ksort($expected);
		$this->assertSame(array($expected), $messages);
	}

	/**
	 * @group bug6
	 */
	public function testExtractMultilineMessage() {
		$messages = $this->object->extract(dirname(__FILE__) . '/../../data/bug6.latte');

		$this->assertContains(array(
			GettextExtractor_Extractor::LINE => 1,
			GettextExtractor_Extractor::SINGULAR => "A\nmultiline\nmessage!"
		), $messages);
	}
}
